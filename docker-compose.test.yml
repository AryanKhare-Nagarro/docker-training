# Docker compose file for test environment
version: '3.8'

services:
# Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    image: ${BACKEND_IMAGE_NAME}:test
    container_name: backend-test
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    env_file:
      - .env.test
    environment:
      - NODE_ENV=test
      - MONGO_URL=mongodb://mongo:${MONGO_DB_PORT}/${MONGO_DB_NAME}
      - REDIS_PORT=${REDIS_PORT}
      - BACKEND_PORT=${BACKEND_PORT}
    depends_on:
      mongo:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - test-network
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: on-failure

# MongoDB service
  mongo:
    image: mongo:latest
    container_name: mongo-test
    ports:
      - "${MONGO_DB_PORT}:${MONGO_DB_PORT}"
    networks:
      - test-network
    volumes:
      - mongodb-data:/data/db
  
# Redis service
  redis:
    image: redis:alpine
    container_name: redis-test
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - test-network
    volumes:
      - redis-data:/data

# Network configuration
networks:
  test-network:
    driver: bridge

# Volume configuration
volumes:
  mongodb-data:
    name: mongodb-data
  redis-data:
    name: redis-data